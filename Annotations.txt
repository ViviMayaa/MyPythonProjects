print()->function

len()(1-50) starts counting from 1, not 0, so when putin an array(0-49) use minus 1 inside:array[len()-1]

print(' '.join(map(str, variable_name))) -- printing list as string on screen

we pass the argument as a parameter: my_function(argument) -> def my_function(parameter)

Positional Argument : my_function(argument_position_one, argument_position_two)
Keyword Argument : my_function(paramenter_name = argument_position_one, paramenter_name = argument_position_two)

Docstring = returns an explanation for the function == def function(): """first line"""

List Comprehension = play_again = True if answer_play_again == 'Y' or answer_play_again == "YES" else False

All caps in global variable points that it would and should not be changed, such as PI = 3.1415. URL = "www...."

Pascal Case => CarBlueprint, snake_case

HigherOrderFunction = a function that calls another function: calculator(2,3,divide) -> def calculator (n1,n2, func) -> def divide

Slicing => piano_keys = [a,b,c,d] - wants only c,d,e => piano_kets = [2:5] [starts, stops(does not get included), step], -1 inverst the list [::-1]